---
- name: "Delete keycloak realm"
  shell: "oc delete keycloakrealm {{ rhsso_realm }} -n {{ eval_rhsso_namespace }}"
  register: output
  failed_when: output.stderr != '' and 'not found' not in output.stderr and 'The system is ensuring all content is removed from this namespace.' not in output.stderr and "the server doesn't have a resource type" not in output.stderr
  changed_when: output.rc == 0

- name: "Delete keycloak"
  shell: "oc delete keycloak rhsso -n {{ eval_rhsso_namespace }}"
  register: output
  failed_when: output.stderr != '' and 'not found' not in output.stderr and 'The system is ensuring all content is removed from this namespace.' not in output.stderr and "the server doesn't have a resource type" not in output.stderr
  changed_when: output.rc == 0

- name: "Wait for keycloak resources to be removed"
  shell: oc get keycloak rhsso -n {{ eval_rhsso_namespace }}
  register: result
  until: not result.stdout
  retries: 200
  delay: 10
  failed_when: result.stdout
  changed_when: False

- name: "Wait for keycloakrealms to be removed"
  shell: oc get keycloakrealm {{ rhsso_realm }} -n {{ eval_rhsso_namespace }}
  register: result
  until: not result.stdout
  retries: 200
  delay: 10
  failed_when: result.stdout
  changed_when: False


- name: "Delete project namespace: {{ eval_rhsso_namespace }}"
  shell: oc delete project {{ eval_rhsso_namespace }}
  register: output
  failed_when: output.stderr != '' and 'not found' not in output.stderr and 'The system is ensuring all content is removed from this namespace.' not in output.stderr
  changed_when: output.rc == 0

- name: Get RHSSO Identities
  shell: oc get identities | grep 'rh_sso' | awk '{print $1}'
  register: identities
  failed_when: false

- name: "Delete user identities"
  shell:  "oc delete identities {{ identities.stdout | replace('\n', ' ') }}"
  when: identities.stdout != ''

- name: Export existing webconsole configmap
  shell: oc get configmap {{ rhsso_openshift_webconsole_configmap }} -o yaml -n {{ rhsso_openshift_webconsole_namespace }} > /tmp/{{ rhsso_openshift_webconsole_configmap }}.yaml

- lineinfile:
    path: /tmp/{{ rhsso_openshift_webconsole_configmap }}.yaml
    regexp: 'logoutPublicURL:'
    line: "      logoutPublicURL: ''"

- name: Replace webconsole configmap in {{ rhsso_openshift_webconsole_namespace }} namespace
  shell: oc replace -f /tmp/{{ rhsso_openshift_webconsole_configmap }}.yaml -n {{ rhsso_openshift_webconsole_namespace }}
